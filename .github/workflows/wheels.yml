name: build-triton-cp38-aarch64
on:
  workflow_dispatch:
    inputs:
      jobs:
        description: Number of parallel cores
        required: false
        default: "96"

jobs:
  wheel:
    runs-on: self-hosted
    timeout-minutes: 600
    steps:
      - uses: actions/checkout@v4
        with:
          repository: triton-lang/triton
          fetch-depth: 0

      - name: Checkout tag v3.3.0
        run: |
          set -eux
          git fetch --tags --force
          git -c advice.detachedHead=false checkout "refs/tags/v3.3.0" || git checkout main
          git submodule update --init --recursive
          git rev-parse --short HEAD

      - uses: actions/cache@v4
        with:
          path: ~/.cache/ccache
          key: ccache-${{ runner.os }}-${{ github.sha }}
          restore-keys: ccache-${{ runner.os }}-

      - name: Build cp38 wheel on host (no manylinux)
        env:
          J: ${{ inputs.jobs }}
        run: |
          ( while true; do echo "::notice::build still running $(date -u)"; sleep 60; done ) & HB=$!
          set -eux
          # deps for Ubuntu 20.04 ARM host build
          sudo apt-get update
          sudo apt-get install -y \
            build-essential cmake ninja-build ccache \
            python3.8 python3.8-venv python3.8-dev \
            git curl pkg-config
          # parallelism from input; if empty, use all cores
          if [ -z "${J:-}" ]; then
            J=$(nproc)
          fi
          LJ=$(( J/4 + 1 )); [ "$LJ" -lt 1 ] && LJ=1

          PY=python3.8
          $PY -m pip install -U pip setuptools wheel

          export CCACHE_DIR="$HOME/.cache/ccache"
          export CC="ccache gcc" CXX="ccache g++"
          export CFLAGS="-march=armv8-a" CXXFLAGS="-march=armv8-a"

          export TRITON_CMAKE_FLAGS="
            -DCMAKE_BUILD_TYPE=Release
            -DCMAKE_C_COMPILER_LAUNCHER=ccache
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
            -DLLVM_ENABLE_ASSERTIONS=OFF
            -DLLVM_ENABLE_PROJECTS=mlir;llvm;lld
            -DLLVM_TARGETS_TO_BUILD=AArch64;NVPTX
            -DLLVM_INCLUDE_TESTS=OFF
            -DLLVM_INCLUDE_EXAMPLES=OFF
            -DLLVM_OPTIMIZED_TABLEGEN=ON
          "
          export CMAKE_BUILD_PARALLEL_LEVEL="$J"
          export LLVM_PARALLEL_COMPILE_JOBS="$J"
          export LLVM_PARALLEL_LINK_JOBS="$LJ"
          export NINJAFLAGS="-v -j$J -l$J"

          cd python
          $PY -m pip wheel --no-deps -w ../wheelhouse .
          ls -lh ../wheelhouse/*
          kill $HB || true

      - uses: actions/upload-artifact@v4
        with:
          name: triton-aarch64-cp38-ubuntu2004
          path: wheelhouse/*-linux_aarch64.whl
          retention-days: 30
          compression-level: 0
