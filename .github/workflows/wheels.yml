name: build-triton-cp38-aarch64
on:
  workflow_dispatch:
    inputs:
      triton_ref:
        description: "Triton tag/branch/commit"
        required: false
        default: v3.3.0
      jobs:
        description: "Parallel jobs: number or 'auto'"
        required: false
        default: "auto"

jobs:
  wheel:
    runs-on: [self-hosted, linux, arm64]
    timeout-minutes: 360

    steps:
      - uses: actions/checkout@v4
        with:
          repository: triton-lang/triton
          fetch-depth: 0

      - name: Select ref
        run: |
          set -eux
          REF="${{ inputs.triton_ref }}"
          git fetch --all --tags --force
          if git rev-parse "refs/tags/$REF" >/dev/null 2>&1; then
            git -c advice.detachedHead=false checkout "refs/tags/$REF"
          elif git rev-parse "origin/$REF" >/dev/null 2>&1; then
            git checkout "origin/$REF"
          else
            git checkout "$REF"
          fi
          git submodule update --init --recursive
          git rev-parse --short HEAD

      - name: Build cp38 wheel in manylinux (aarch64)
        env:
          GHA_JOBS: ${{ inputs.jobs }}
        run: |
          ( while true; do echo "::notice::build alive $(date -u)"; sleep 60; done ) & HB=$!

          docker run --rm \
            -e GHA_JOBS \
            -v "$PWD":/io -w /io/python quay.io/pypa/manylinux_2_28_aarch64 bash -lc '
              set -eux

              # --- auto-detect parallelism ---
              if [ -z "${GHA_JOBS:-}" ] || [ "$GHA_JOBS" = "auto" ]; then
                J=$(nproc)                           # all visible CPUs
              else
                J="$GHA_JOBS"
              fi
              # link jobs: gentler than compile jobs
              LJ=$(( J/4 + 1 ))
              if [ "$LJ" -lt 1 ]; then LJ=1; fi

              PYBIN=/opt/python/cp38-cp38/bin
              "$PYBIN"/pip install -U pip setuptools wheel cmake ninja auditwheel ccache

              export CCACHE_DIR=/io/.ccache
              export CC="ccache gcc" CXX="ccache g++"

              export TRITON_CMAKE_FLAGS="
                -DCMAKE_BUILD_TYPE=Release
                -DLLVM_ENABLE_ASSERTIONS=OFF
                -DLLVM_ENABLE_PROJECTS=mlir;llvm;lld
                -DLLVM_TARGETS_TO_BUILD=AArch64;NVPTX
                -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF
                -DLLVM_OPTIMIZED_TABLEGEN=ON
                -DCMAKE_C_FLAGS=-march=armv8-a -DCMAKE_CXX_FLAGS=-march=armv8-a
                -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
              "

              export CMAKE_BUILD_PARALLEL_LEVEL="$J"
              export LLVM_PARALLEL_COMPILE_JOBS="$J"
              export LLVM_PARALLEL_LINK_JOBS="$LJ"
              export NINJAFLAGS="-j$J -l$J -v"

              "$PYBIN"/pip wheel --no-deps -w /io/wheelhouse .
              auditwheel repair /io/wheelhouse/triton-*.whl -w /io/wheelhouse
              rm -f /io/wheelhouse/triton-*-linux_aarch64.whl || true
            '

          kill $HB || true

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: triton-aarch64-cp38-${{ github.run_number }}
          path: wheelhouse/*.whl
          retention-days: 30
