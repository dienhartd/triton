name: build-triton-cp38-aarch64
on:
  workflow_dispatch:
    inputs:
      jobs:
        description: Number of parallel cores
        required: false
        default: "96"

jobs:
  wheel:
    runs-on: ubuntu-24.04-arm
    timeout-minutes: 600
    steps:
      - uses: actions/checkout@v4
        with:
          repository: triton-lang/triton
          fetch-depth: 0

      - name: Checkout tag v3.3.0
        run: |
          set -eux
          git fetch --tags --force
          git -c advice.detachedHead=false checkout "refs/tags/v3.3.0" || git checkout main
          git submodule update --init --recursive
          git rev-parse --short HEAD

      - uses: actions/cache@v4
        with:
          path: ~/.cache/ccache
          key: ccache-${{ runner.os }}-${{ github.sha }}
          restore-keys: ccache-${{ runner.os }}-

      - name: Build cp38 wheel in manylinux (aarch64)
        run: |
          ( while true; do echo "::notice::build still running $(date -u)"; sleep 60; done ) & HB=$!
          docker run --rm \
            -e JOBS='${{ inputs.jobs }}' \
            -v "$PWD":/io -w /io/python quay.io/pypa/manylinux_2_28_aarch64 bash -lc '
              set -eux
              PYBIN=/opt/python/cp38-cp38/bin
              $PYBIN/pip install -U pip setuptools wheel cmake ninja auditwheel

              # parallelism from input; if empty, use all cores
              if [ -z "${JOBS:-}" ]; then
                J=$(nproc)
              else
                J="$JOBS"
              fi
              LJ=$(( J/4 + 1 ))   # gentler for the linker
              [ "$LJ" -lt 1 ] && LJ=1

              export CC=gcc CXX=g++ CFLAGS="-march=armv8-a" CXXFLAGS="-march=armv8-a"
              export TRITON_CMAKE_FLAGS="
                -DCMAKE_BUILD_TYPE=Release
                -DCMAKE_C_COMPILER_LAUNCHER=ccache
                -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
                -DLLVM_ENABLE_ASSERTIONS=OFF
                -DLLVM_ENABLE_PROJECTS=mlir;llvm;lld
                -DLLVM_TARGETS_TO_BUILD=AArch64;NVPTX
                -DLLVM_INCLUDE_TESTS=OFF
                -DLLVM_INCLUDE_EXAMPLES=OFF
                -DLLVM_OPTIMIZED_TABLEGEN=ON
              "

              export CMAKE_BUILD_PARALLEL_LEVEL="$J"
              export LLVM_PARALLEL_COMPILE_JOBS="$J"
              export LLVM_PARALLEL_LINK_JOBS="$LJ"
              export NINJAFLAGS="-v -j$J -l$J"

              $PYBIN/pip wheel --no-deps -w /io/wheelhouse .
              auditwheel repair /io/wheelhouse/triton-*.whl -w /io/wheelhouse
            '
          kill $HB || true

      - uses: actions/upload-artifact@v4
        with:
          name: triton-aarch64-cp38
          path: wheelhouse/*.whl
          retention-days: 30
